openapi: 3.0.3
info:
  title: Issue Tracker API
  version: 1.0.0
  description: |
    API REST para gestionar incidencias, comentarios, adjuntos, observadores (watchers) y configuraciones en una aplicación de seguimiento de tareas. 
    Diseñada para usuarios autenticados, permite operaciones CRUD con soporte para búsqueda avanzada, filtrado y carga de archivos adjuntos.

    **Funcionalidades principales**:
    - **Incidencias**: Crear, listar, actualizar y eliminar issues con filtros por título, descripción, estado, prioridad y creador.
    - **Comentarios**: Añadir, editar y eliminar comentarios asociados a issues, con permisos restringidos al autor.
    - **Adjuntos**: Subir y gestionar archivos adjuntos usando `multipart/form-data`.
    - **Observadores**: Seguir issues para recibir notificaciones de cambios.
    - **Configuraciones**: Gestionar estados, prioridades, severidades y tipos de issues.

    **Autentificación**:
    - Usa tokens de API en el encabezado `Authorization` con formato `Token <api_key>`.
    - Las API keys se obtienen desde la página de perfil en la aplicación web.

    **Instrucciones de uso**:
    - Importa este fichero en [Swagger Editor](https://editor.swagger.io/) para explorar y probar los endpoints.
    - Configura CORS en el servidor para permitir solicitudes desde Swagger Editor.
    - Asegúrate de incluir un token válido en cada solicitud.

    **Notas**:
    - Los endpoints requieren autentificación salvo que se indique lo contrario.
    - Los ejemplos reflejan el formato real de los datos basado en la implementación de la API.
  termsOfService: https://www.example.com/terms/
  contact:
    name: Equipo Issue Tracker
    email: support@issue-tracker.com
    url: https://www.issue-tracker.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
externalDocs:
  description: Repositorio del proyecto y documentación adicional
  url: https://github.com/equipo/issue-tracker
servers:
  - url: https://issue-tracker.render.com/api
    description: Servidor de producción (Render)
  - url: http://localhost:8000/api
    description: Servidor de desarrollo local
components:
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Token de autentificación en formato `Token <api_key>`. 
        Ejemplo: `Token abc123def456`. 
        Obtén tu API key desde la página de perfil en la aplicación web.
  schemas:
    Issue:
      type: object
      description: Representa una incidencia en el sistema de seguimiento de tareas.
      properties:
        id:
          type: integer
          readOnly: true
          description: Identificador único del issue.
          example: 1
        title:
          type: string
          description: Título descriptivo del issue (máximo 255 caracteres).
          example: "Error en autenticación"
        description:
          type: string
          description: Descripción detallada del problema o tarea.
          example: "El sistema no valida credenciales en iOS 18."
        status:
          type: string
          description: Estado actual del issue (debe coincidir con un valor en /statuses/).
          example: "open"
        priority:
          type: string
          description: Prioridad del issue (debe coincidir con un valor en /priorities/).
          example: "high"
          nullable: true
        creator:
          type: string
          readOnly: true
          description: Nombre de usuario del creador del issue.
          example: "alice"
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Fecha y hora de creación del issue.
          example: "2025-05-15T12:00:00Z"
      required:
        - title
        - description
        - status
    IssueCreate:
      type: object
      description: Estructura para crear una nueva incidencia.
      properties:
        Subject:
          type: string
          description: Título del issue (máximo 255 caracteres).
          example: "Error en autenticación"
        Description:
          type: string
          description: Descripción detallada del issue.
          example: "El sistema no valida credenciales en iOS 18."
        Status:
          type: string
          description: Estado inicial del issue (debe coincidir con un valor en /statuses/).
          example: "open"
      required:
        - Subject
        - Description
        - Status
    Comment:
      type: object
      description: Comentario asociado a una incidencia.
      properties:
        id:
          type: integer
          readOnly: true
          description: Identificador único del comentario.
          example: 1
        issue:
          type: integer
          description: ID del issue al que pertenece el comentario.
          example: 1
        content:
          type: string
          description: Texto del comentario.
          example: "He reproducido el error en Chrome v120."
        author:
          type: string
          readOnly: true
          description: Nombre de usuario del autor del comentario.
          example: "bob"
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Fecha y hora de creación del comentario.
          example: "2025-05-15T12:15:00Z"
      required:
        - issue
        - content
    Attachment:
      type: object
      description: Archivo adjunto asociado a una incidencia.
      properties:
        attachment_id:
          type: integer
          readOnly: true
          description: Identificador único del adjunto.
          example: 1
        issue:
          type: integer
          description: ID del issue al que pertenece el adjunto.
          example: 1
        file:
          type: string
          format: uri
          readOnly: true
          description: URL del archivo adjunto en el servidor.
          example: "https://issue-tracker.render.com/media/attachments/screenshot.png"
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
          description: Fecha y hora de subida del archivo.
          example: "2025-05-15T12:20:00Z"
      required:
        - issue
    Watcher:
      type: object
      description: Usuario que observa una incidencia para recibir notificaciones.
      properties:
        id:
          type: integer
          readOnly: true
          description: Identificador único del observador.
          example: 1
        issue:
          type: integer
          description: ID del issue observado.
          example: 1
        user:
          type: string
          readOnly: true
          description: Nombre de usuario del observador.
          example: "alice"
      required:
        - issue
    Status:
      type: object
      description: Estado configurable para incidencias.
      properties:
        id:
          type: integer
          readOnly: true
          description: Identificador único del estado.
          example: 1
        name:
          type: string
          description: Nombre del estado (máximo 50 caracteres).
          example: "Open"
        orden:
          type: integer
          description: Orden de visualización en listas.
          example: 1
      required:
        - name
        - orden
    Priority:
      type: object
      description: Prioridad configurable para incidencias.
      properties:
        id:
          type: integer
          readOnly: true
          description: Identificador único de la prioridad.
          example: 1
        name:
          type: string
          description: Nombre de la prioridad (máximo 50 caracteres).
          example: "High"
        orden:
          type: integer
          description: Orden de visualización en listas.
          example: 1
      required:
        - name
        - orden
    Severity:
      type: object
      description: Severidad configurable para incidencias.
      properties:
        id:
          type: integer
          readOnly: true
          description: Identificador único de la severidad.
          example: 1
        name:
          type: string
          description: Nombre de la severidad (máximo 50 caracteres).
          example: "Critical"
        orden:
          type: integer
          description: Orden de visualización en listas.
          example: 1
      required:
        - name
        - orden
    Type:
      type: object
      description: Tipo configurable para incidencias.
      properties:
        id:
          type: integer
          readOnly: true
          description: Identificador único del tipo.
          example: 1
        name:
          type: string
          description: Nombre del tipo (máximo 50 caracteres).
          example: "Bug"
        orden:
          type: integer
          description: Orden de visualización en listas.
          example: 1
      required:
        - name
        - orden
    Settings:
      type: object
      description: Colección de configuraciones disponibles para la aplicación.
      properties:
        statuses:
          type: array
          description: Lista de estados disponibles.
          items:
            $ref: '#/components/schemas/Status'
        priorities:
          type: array
          description: Lista de prioridades disponibles.
          items:
            $ref: '#/components/schemas/Priority'
        severities:
          type: array
          description: Lista de severidades disponibles.
          items:
            $ref: '#/components/schemas/Severity'
        types:
          type: array
          description: Lista de tipos disponibles.
          items:
            $ref: '#/components/schemas/Type'
    Error:
      type: object
      description: Respuesta genérica para errores de la API.
      properties:
        error:
          type: string
          description: Mensaje descriptivo del error.
          example: "No se encontraron incidencias"
      required:
        - error
paths:
  /issues/:
    get:
      summary: Listar todas las incidencias
      description: |
        Recupera una lista de incidencias con soporte para búsqueda, filtrado y ordenación.
        Los resultados se devuelven en formato JSON y pueden personalizarse mediante parámetros de consulta.

        **Parámetros de consulta**:
        - `q`: Busca en título y descripción (insensible a mayúsculas).
        - `status`: Filtra por estado (debe coincidir con un valor en /statuses/).
        - `priority`: Filtra por prioridad (debe coincidir con un valor en /priorities/).
        - `creator`: Filtra por nombre de usuario del creador.
        - `order_by`: Ordena por cualquier campo (usa `-` para descendente, ej. `-created_at`).

        **Ejemplo de solicitud**:
        ```
        GET /issues/?q=error&status=open&priority=high&order_by=-created_at
        ```
      operationId: listIssues
      tags:
        - Issues
      parameters:
        - name: q
          in: query
          description: Término de búsqueda para título o descripción.
          schema:
            type: string
          example: "error"
        - name: status
          in: query
          description: Filtrar por estado del issue.
          schema:
            type: string
          example: "open"
        - name: priority
          in: query
          description: Filtrar por prioridad del issue.
          schema:
            type: string
          example: "high"
        - name: creator
          in: query
          description: Filtrar por nombre de usuario del creador.
          schema:
            type: string
          example: "alice"
        - name: order_by
          in: query
          description: Campo para ordenar los resultados (prefijo `-` para descendente).
          schema:
            type: string
          example: "-created_at"
      responses:
        '200':
          description: Lista de incidencias recuperada con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
              example:
                - id: 1
                  title: "Error en autenticación"
                  description: "El sistema no valida credenciales en iOS 18."
                  status: "open"
                  priority: "high"
                  creator: "alice"
                  created_at: "2025-05-15T12:00:00Z"
                - id: 2
                  title: "Optimización de consultas"
                  description: "Las consultas al dashboard son lentas."
                  status: "in_progress"
                  priority: "medium"
                  creator: "bob"
                  created_at: "2025-05-14T09:00:00Z"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '404':
          description: No se encontraron incidencias.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "No hay Issues"
      security:
        - TokenAuth: []
    post:
      summary: Crear una nueva incidencia
      description: |
        Crea una nueva incidencia con los datos proporcionados. 
        El usuario autenticado se asigna automáticamente como creador, y la fecha de creación se genera en el servidor.

        **Notas**:
        - Los campos `Subject`, `Description` y `Status` son obligatorios.
        - El `Status` debe coincidir con un valor existente en `/statuses/`.

        **Ejemplo de solicitud**:
        ```
        POST /issues/
        Content-Type: application/json
        {
          "Subject": "Error en autenticación",
          "Description": "El sistema no valida credenciales en iOS 18.",
          "Status": "open"
        }
        ```
      operationId: createIssue
      tags:
        - Issues
      requestBody:
        description: Datos para crear una incidencia.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCreate'
            example:
              Subject: "Error en autenticación"
              Description: "El sistema no valida credenciales en iOS 18."
              Status: "open"
      responses:
        '201':
          description: Incidencia creada con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
              example:
                id: 1
                title: "Error en autenticación"
                description: "El sistema no valida credenciales en iOS 18."
                status: "open"
                priority: null
                creator: "alice"
                created_at: "2025-05-15T12:00:00Z"
        '400':
          description: Datos inválidos o campos faltantes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Faltan campos requeridos"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
    delete:
      summary: Eliminar todas las incidencias
      description: |
        Elimina todas las incidencias del sistema. 
        Esta acción es irreversible y está restringida a usuarios con permisos administrativos.

        **Notas**:
        - Requiere autentificación y permisos elevados.
        - Use con precaución, ya que no se puede deshacer.

        **Ejemplo de solicitud**:
        ```
        DELETE /issues/
        ```
      operationId: deleteAllIssues
      tags:
        - Issues
      responses:
        '202':
          description: Todas las incidencias eliminadas con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmación de la eliminación.
                    example: "Todas las incidencias han sido eliminadas"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '403':
          description: Permisos insuficientes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "No tienes permisos para realizar esta acción"
        '404':
          description: No se encontraron incidencias.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "No hay Issues"
      security:
        - TokenAuth: []
  /issues/{issue_id}/:
    get:
      summary: Obtener una incidencia específica
      description: |
        Recupera los detalles de una incidencia específica identificada por su ID.

        **Ejemplo de solicitud**:
        ```
        GET /issues/1/
        ```
      operationId: getIssue
      tags:
        - Issues
      parameters:
        - name: issue_id
          in: path
          description: ID de la incidencia a recuperar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Detalles de la incidencia.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
              example:
                id: 1
                title: "Error en autenticación"
                description: "El sistema no valida credenciales en iOS 18."
                status: "open"
                priority: "high"
                creator: "alice"
                created_at: "2025-05-15T12:00:00Z"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '404':
          description: Incidencia no encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Issue no encontrado"
      security:
        - TokenAuth: []
    put:
      summary: Actualizar una incidencia
      description: |
        Actualiza los datos de una incidencia existente identificada por su ID. 
        Soporta actualizaciones parciales (solo se modifican los campos proporcionados).

        **Notas**:
        - Los campos `title`, `description`, `status` y `priority` son opcionales.
        - El `status` y `priority` deben coincidir con valores existentes en `/statuses/` y `/priorities/`.

        **Ejemplo de solicitud**:
        ```
        PUT /issues/1/
        Content-Type: application/json
        {
          "title": "Error en autenticación (actualizado)",
          "description": "El problema persiste en iOS 18.",
          "status": "in_progress",
          "priority": "high"
        }
        ```
      operationId: updateIssue
      tags:
        - Issues
      parameters:
        - name: issue_id
          in: path
          description: ID de la incidencia a actualizar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      requestBody:
        description: Datos para actualizar la incidencia.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Issue'
            example:
              title: "Error en autenticación (actualizado)"
              description: "El problema persiste en iOS 18."
              status: "in_progress"
              priority: "high"
      responses:
        '200':
          description: Incidencia actualizada con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
              example:
                id: 1
                title: "Error en autenticación (actualizado)"
                description: "El problema persiste en iOS 18."
                status: "in_progress"
                priority: "high"
                creator: "alice"
                created_at: "2025-05-15T12:00:00Z"
        '400':
          description: Datos inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Datos inválidos"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '404':
          description: Incidencia no encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Issue no encontrado"
      security:
        - TokenAuth: []
    delete:
      summary: Eliminar una incidencia
      description: |
        Elimina una incidencia específica identificada por su ID.

        **Ejemplo de solicitud**:
        ```
        DELETE /issues/1/
        ```
      operationId: deleteIssue
      tags:
        - Issues
      parameters:
        - name: issue_id
          in: path
          description: ID de la incidencia a eliminar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '204':
          description: Incidencia eliminada con éxito.
          content: {}
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '404':
          description: Incidencia no encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Issue no encontrado"
      security:
        - TokenAuth: []
  /comments/:
    get:
      summary: Listar comentarios
      description: |
        Recupera una lista de comentarios, opcionalmente filtrada por el ID de una incidencia.
        Los comentarios se ordenan por fecha de creación en orden descendente.

        **Parámetro de consulta**:
        - `issue_id`: Filtra comentarios por el ID de la incidencia.

        **Ejemplo de solicitud**:
        ```
        GET /comments/?issue_id=1
        ```
      operationId: listComments
      tags:
        - Comments
      parameters:
        - name: issue_id
          in: query
          description: Filtrar comentarios por ID de la incidencia.
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Lista de comentarios recuperada con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
              example:
                - id: 1
                  issue: 1
                  content: "He reproducido el error en Chrome v120."
                  author: "bob"
                  created_at: "2025-05-15T12:15:00Z"
                - id: 2
                  issue: 1
                  content: "Por favor, adjunta un log."
                  author: "alice"
                  created_at: "2025-05-15T12:10:00Z"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
    post:
      summary: Crear un nuevo comentario
      description: |
        Crea un comentario asociado a una incidencia. 
        El usuario autenticado se asigna automáticamente como autor, y la fecha de creación se genera en el servidor.

        **Notas**:
        - El campo `issue` debe corresponder a una incidencia existente.
        - El campo `content` no puede estar vacío.

        **Ejemplo de solicitud**:
        ```
        POST /comments/
        Content-Type: application/json
        {
          "issue": 1,
          "content": "He reproducido el error en Chrome v120."
        }
        ```
      operationId: createComment
      tags:
        - Comments
      requestBody:
        description: Datos para crear un comentario.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
            example:
              issue: 1
              content: "He reproducido el error en Chrome v120."
      responses:
        '201':
          description: Comentario creado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
              example:
                id: 1
                issue: 1
                content: "He reproducido el error en Chrome v120."
                author: "bob"
                created_at: "2025-05-15T12:15:00Z"
        '400':
          description: Datos inválidos o incidencia no encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "El issue especificado no existe"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
  /comments/{comment_id}/:
    get:
      summary: Obtener un comentario específico
      description: |
        Recupera los detalles de un comentario específico identificado por su ID.

        **Ejemplo de solicitud**:
        ```
        GET /comments/1/
        ```
      operationId: getComment
      tags:
        - Comments
      parameters:
        - name: comment_id
          in: path
          description: ID del comentario a recuperar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Detalles del comentario.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
              example:
                id: 1
                issue: 1
                content: "He reproducido el error en Chrome v120."
                author: "bob"
                created_at: "2025-05-15T12:15:00Z"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '404':
          description: Comentario no encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Comentario no encontrado"
      security:
        - TokenAuth: []
    put:
      summary: Actualizar un comentario
      description: |
        Actualiza un comentario existente identificado por su ID. 
        Solo el autor del comentario puede realizar esta acción, y soporta actualizaciones parciales.

        **Notas**:
        - Solo el campo `content` es editable.
        - El campo `content` no puede estar vacío.

        **Ejemplo de solicitud**:
        ```
        PUT /comments/1/
        Content-Type: application/json
        {
          "content": "He reproducido el error en Chrome v120 y Firefox v115."
        }
        ```
      operationId: updateComment
      tags:
        - Comments
      parameters:
        - name: comment_id
          in: path
          description: ID del comentario a actualizar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      requestBody:
        description: Datos para actualizar el comentario.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
            example:
              content: "He reproducido el error en Chrome v120 y Firefox v115."
      responses:
        '200':
          description: Comentario actualizado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
              example:
                id: 1
                issue: 1
                content: "He reproducido el error en Chrome v120 y Firefox v115."
                author: "bob"
                created_at: "2025-05-15T12:15:00Z"
        '400':
          description: Datos inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Datos inválidos"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '403':
          description: No autorizado (el usuario no es el autor del comentario).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "No puedes editar un comentario que no creaste"
        '404':
          description: Comentario no encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Comentario no encontrado"
      security:
        - TokenAuth: []
    delete:
      summary: Eliminar un comentario
      description: |
        Elimina un comentario específico identificado por su ID. 
        Solo el autor del comentario puede realizar esta acción.

        **Ejemplo de solicitud**:
        ```
        DELETE /comments/1/
        ```
      operationId: deleteComment
      tags:
        - Comments
      parameters:
        - name: comment_id
          in: path
          description: ID del comentario a eliminar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '204':
          description: Comentario eliminado con éxito.
          content: {}
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '403':
          description: No autorizado (el usuario no es el autor del comentario).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "No puedes eliminar un comentario que no creaste"
        '404':
          description: Comentario no encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Comentario no encontrado"
      security:
        - TokenAuth: []
  /attachments/:
    get:
      summary: Listar adjuntos
      description: |
        Recupera una lista de adjuntos, opcionalmente filtrada por el ID de una incidencia.

        **Parámetro de consulta**:
        - `issue_id`: Filtra adjuntos por el ID de la incidencia.

        **Ejemplo de solicitud**:
        ```
        GET /attachments/?issue_id=1
        ```
      operationId: listAttachments
      tags:
        - Attachments
      parameters:
        - name: issue_id
          in: query
          description: Filtrar adjuntos por ID de la incidencia.
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Lista de adjuntos recuperada con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
              example:
                - attachment_id: 1
                  issue: 1
                  file: "https://issue-tracker.render.com/media/attachments/screenshot.png"
                  uploaded_at: "2025-05-15T12:20:00Z"
                - attachment_id: 2
                  issue: 1
                  file: "https://issue-tracker.render.com/media/attachments/log.txt"
                  uploaded_at: "2025-05-15T12:25:00Z"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
    post:
      summary: Subir un nuevo adjunto
      description: |
        Sube un archivo adjunto asociado a una incidencia. 
        Usa el formato `multipart/form-data` para la carga de archivos.

        **Notas**:
        - El campo `issue` debe corresponder a una incidencia existente.
        - El campo `file` debe ser un archivo válido (ej. PNG, PDF, TXT).
        - La fecha de subida se genera automáticamente en el servidor.

        **Ejemplo de solicitud**:
        ```
        POST /attachments/
        Content-Type: multipart/form-data
        Content-Disposition: form-data; name="file"; filename="screenshot.png"
        Content-Disposition: form-data; name="issue"; value="1"
        ```
      operationId: createAttachment
      tags:
        - Attachments
      requestBody:
        description: Archivo y datos para crear un adjunto.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Archivo a subir (ej. PNG, PDF, TXT).
                issue:
                  type: integer
                  description: ID de la incidencia asociada.
                  example: 1
              required:
                - file
                - issue
      responses:
        '201':
          description: Adjunto subido con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
              example:
                attachment_id: 1
                issue: 1
                file: "https://issue-tracker.render.com/media/attachments/screenshot.png"
                uploaded_at: "2025-05-15T12:20:00Z"
        '400':
          description: Datos inválidos o incidencia no encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Datos inválidos"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
  /attachments/{attachment_id}/:
    get:
      summary: Obtener un adjunto específico
      description: |
        Recupera los detalles de un adjunto específico identificado por su ID.

        **Ejemplo de solicitud**:
        ```
        GET /attachments/1/
        ```
      operationId: getAttachment
      tags:
        - Attachments
      parameters:
        - name: attachment_id
          in: path
          description: ID del adjunto a recuperar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Detalles del adjunto.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
              example:
                attachment_id: 1
                issue: 1
                file: "https://issue-tracker.render.com/media/attachments/screenshot.png"
                uploaded_at: "2025-05-15T12:20:00Z"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '404':
          description: Adjunto no encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Adjunto no encontrado"
      security:
        - TokenAuth: []
    delete:
      summary: Eliminar un adjunto
      description: |
        Elimina un adjunto específico identificado por su ID.

        **Ejemplo de solicitud**:
        ```
        DELETE /attachments/1/
        ```
      operationId: deleteAttachment
      tags:
        - Attachments
      parameters:
        - name: attachment_id
          in: path
          description: ID del adjunto a eliminar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '204':
          description: Adjunto eliminado con éxito.
          content: {}
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '404':
          description: Adjunto no encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Adjunto no encontrado"
      security:
        - TokenAuth: []
  /watchers/:
    get:
      summary: Listar observadores
      description: |
        Recupera una lista de observadores (watchers), opcionalmente filtrada por el ID de una incidencia.

        **Parámetro de consulta**:
        - `issue_id`: Filtra observadores por el ID de la incidencia.

        **Ejemplo de solicitud**:
        ```
        GET /watchers/?issue_id=1
        ```
      operationId: listWatchers
      tags:
        - Watchers
      parameters:
        - name: issue_id
          in: query
          description: Filtrar observadores por ID de la incidencia.
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Lista de observadores recuperada con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Watcher'
              example:
                - id: 1
                  issue: 1
                  user: "alice"
                - id: 2
                  issue: 1
                  user: "bob"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
    post:
      summary: Añadir un nuevo observador
      description: |
        Añade al usuario autenticado como observador de una incidencia. 
        Un usuario no puede observar la misma incidencia más de una vez.

        **Notas**:
        - El campo `issue` debe corresponder a una incidencia existente.
        - El usuario autenticado se asigna automáticamente como observador.

        **Ejemplo de solicitud**:
        ```
        POST /watchers/
        Content-Type: application/json
        {
          "issue": 1
        }
        ```
      operationId: createWatcher
      tags:
        - Watchers
      requestBody:
        description: Datos para añadir un observador.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watcher'
            example:
              issue: 1
      responses:
        '201':
          description: Observador añadido con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
              example:
                id: 1
                issue: 1
                user: "alice"
        '400':
          description: Datos inválidos o el usuario ya observa la incidencia.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Este usuario ya está observando este issue"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
  /watchers/{watcher_id}/:
    get:
      summary: Obtener un observador específico
      description: |
        Recupera los detalles de un observador específico identificado por su ID.

        **Ejemplo de solicitud**:
        ```
        GET /watchers/1/
        ```
      operationId: getWatcher
      tags:
        - Watchers
      parameters:
        - name: watcher_id
          in: path
          description: ID del observador a recuperar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Detalles del observador.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
              example:
                id: 1
                issue: 1
                user: "alice"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '404':
          description: Observador no encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Watcher no encontrado"
      security:
        - TokenAuth: []
    delete:
      summary: Eliminar un observador
      description: |
        Elimina un observador específico identificado por su ID. 
        Solo el usuario asociado puede realizar esta acción.

        **Ejemplo de solicitud**:
        ```
        DELETE /watchers/1/
        ```
      operationId: deleteWatcher
      tags:
        - Watchers
      parameters:
        - name: watcher_id
          in: path
          description: ID del observador a eliminar.
          required: true
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '204':
          description: Observador eliminado con éxito.
          content: {}
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
        '403':
          description: No autorizado (el usuario no es el observador).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "No puedes eliminar a otro usuario como watcher"
        '404':
          description: Observador no encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Watcher no encontrado"
      security:
        - TokenAuth: []
  /settings/:
    get:
      summary: Obtener todas las configuraciones
      description: |
        Recupera una lista de todas las configuraciones disponibles, incluyendo estados, prioridades, severidades y tipos.
        Los elementos se ordenan por el campo `orden`.

        **Ejemplo de solicitud**:
        ```
        GET /settings/
        ```
      operationId: getSettings
      tags:
        - Settings
      responses:
        '200':
          description: Configuraciones recuperadas con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
              example:
                statuses:
                  - id: 1
                    name: "Open"
                    orden: 1
                  - id: 2
                    name: "In Progress"
                    orden: 2
                priorities:
                  - id: 1
                    name: "High"
                    orden: 1
                  - id: 2
                    name: "Medium"
                    orden: 2
                severities:
                  - id: 1
                    name: "Critical"
                    orden: 1
                  - id: 2
                    name: "Major"
                    orden: 2
                types:
                  - id: 1
                    name: "Bug"
                    orden: 1
                  - id: 2
                    name: "Feature"
                    orden: 2
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
  /statuses/:
    get:
      summary: Listar estados
      description: |
        Recupera una lista de todos los estados disponibles, ordenados por el campo `orden`.

        **Ejemplo de solicitud**:
        ```
        GET /statuses/
        ```
      operationId: listStatuses
      tags:
        - Settings
      responses:
        '200':
          description: Lista de estados recuperada con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
              example:
                - id: 1
                  name: "Open"
                  orden: 1
                - id: 2
                  name: "In Progress"
                  orden: 2
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
    post:
      summary: Crear un nuevo estado
      description: |
        Crea un nuevo estado para usar en incidencias.

        **Notas**:
        - El campo `name` debe ser único y no exceder 50 caracteres.
        - El campo `orden` determina la posición en listas.

        **Ejemplo de solicitud**:
        ```
        POST /statuses/
        Content-Type: application/json
        {
          "name": "Closed",
          "orden": 3
        }
        ```
      operationId: createStatus
      tags:
        - Settings
      requestBody:
        description: Datos para crear un estado.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
            example:
              name: "Closed"
              orden: 3
      responses:
        '201':
          description: Estado creado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
              example:
                id: 3
                name: "Closed"
                orden: 3
        '400':
          description: Datos inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Datos inválidos"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
  /priorities/:
    get:
      summary: Listar prioridades
      description: |
        Recupera una lista de todas las prioridades disponibles, ordenadas por el campo `orden`.

        **Ejemplo de solicitud**:
        ```
        GET /priorities/
        ```
      operationId: listPriorities
      tags:
        - Settings
      responses:
        '200':
          description: Lista de prioridades recuperada con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Priority'
              example:
                - id: 1
                  name: "High"
                  orden: 1
                - id: 2
                  name: "Medium"
                  orden: 2
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
    post:
      summary: Crear una nueva prioridad
      description: |
        Crea una nueva prioridad para usar en incidencias.

        **Notas**:
        - El campo `name` debe ser único y no exceder 50 caracteres.
        - El campo `orden` determina la posición en listas.

        **Ejemplo de solicitud**:
        ```
        POST /priorities/
        Content-Type: application/json
        {
          "name": "Low",
          "orden": 3
        }
        ```
      operationId: createPriority
      tags:
        - Settings
      requestBody:
        description: Datos para crear una prioridad.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Priority'
            example:
              name: "Low"
              orden: 3
      responses:
        '201':
          description: Prioridad creada con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Priority'
              example:
                id: 3
                name: "Low"
                orden: 3
        '400':
          description: Datos inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Datos inválidos"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
  /types/:
    get:
      summary: Listar tipos
      description: |
        Recupera una lista de todos los tipos disponibles, ordenados por el campo `orden`.

        **Ejemplo de solicitud**:
        ```
        GET /types/
        ```
      operationId: listTypes
      tags:
        - Settings
      responses:
        '200':
          description: Lista de tipos recuperada con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Type'
              example:
                - id: 1
                  name: "Bug"
                  orden: 1
                - id: 2
                  name: "Feature"
                  orden: 2
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
    post:
      summary: Crear un nuevo tipo
      description: |
        Crea un nuevo tipo para usar en incidencias.

        **Notas**:
        - El campo `name` debe ser único y no exceder 50 caracteres.
        - El campo `orden` determina la posición en listas.

        **Ejemplo de solicitud**:
        ```
        POST /types/
        Content-Type: application/json
        {
          "name": "Task",
          "orden": 3
        }
        ```
      operationId: createType
      tags:
        - Settings
      requestBody:
        description: Datos para crear un tipo.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Type'
            example:
              name: "Task"
              orden: 3
      responses:
        '201':
          description: Tipo creado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Type'
              example:
                id: 3
                name: "Task"
                orden: 3
        '400':
          description: Datos inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Datos inválidos"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
  /severities/:
    get:
      summary: Listar severidades
      description: |
        Recupera una lista de todas las severidades disponibles, ordenadas por el campo `orden`.

        **Ejemplo de solicitud**:
        ```
        GET /severities/
        ```
      operationId: listSeverities
      tags:
        - Settings
      responses:
        '200':
          description: Lista de severidades recuperada con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Severity'
              example:
                - id: 1
                  name: "Critical"
                  orden: 1
                - id: 2
                  name: "Major"
                  orden: 2
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
    post:
      summary: Crear una nueva severidad
      description: |
        Crea una nueva severidad para usar en incidencias.

        **Notas**:
        - El campo `name` debe ser único y no exceder 50 caracteres.
        - El campo `orden` determina la posición en listas.

        **Ejemplo de solicitud**:
        ```
        POST /severities/
        Content-Type: application/json
        {
          "name": "Minor",
          "orden": 3
        }
        ```
      operationId: createSeverity
      tags:
        - Settings
      requestBody:
        description: Datos para crear una severidad.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Severity'
            example:
              name: "Minor"
              orden: 3
      responses:
        '201':
          description: Severidad creada con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Severity'
              example:
                id: 3
                name: "Minor"
                orden: 3
        '400':
          description: Datos inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Datos inválidos"
        '401':
          description: No autorizado (falta token o token inválido).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Credenciales de autentificación no proporcionadas"
      security:
        - TokenAuth: []
security:
  - TokenAuth: []